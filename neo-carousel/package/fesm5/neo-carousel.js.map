{"version":3,"file":"neo-carousel.js","sources":["ng://neo-carousel/lib/ngx-gallery-action.component.ts","ng://neo-carousel/lib/ngx-gallery-arrows.component.ts","ng://neo-carousel/lib/ngx-gallery-bullets.component.ts","ng://neo-carousel/lib/ngx-gallery-helper.service.ts","ng://neo-carousel/lib/ngx-gallery-animation.model.ts","ng://neo-carousel/lib/ngx-gallery-image.component.ts","ng://neo-carousel/lib/ngx-gallery-order.model.ts","ng://neo-carousel/lib/ngx-gallery-thumbnails.component.ts","ng://neo-carousel/lib/ngx-gallery-preview.component.ts","ng://neo-carousel/lib/ngx-gallery-image-size.model.ts","ng://neo-carousel/lib/ngx-gallery-layout.model.ts","ng://neo-carousel/lib/ngx-gallery-action.model.ts","ng://neo-carousel/lib/ngx-gallery-options.model.ts","ng://neo-carousel/lib/ngx-gallery-ordered-image.model.ts","ng://neo-carousel/lib/ngx-gallery.component.ts","ng://neo-carousel/lib/ngx-gallery-image.model.ts","ng://neo-carousel/index.ts"],"sourcesContent":["import { ChangeDetectionStrategy, Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n    selector: 'ngx-gallery-action',\n    template: `\n        <div class=\"ngx-gallery-icon\" [class.ngx-gallery-icon-disabled]=\"disabled\"\n            aria-hidden=\"true\"\n            title=\"{{ titleText }}\"\n            (click)=\"handleClick($event)\">\n                <!--<i class=\"ngx-gallery-icon-content {{ icon }}\"></i>-->\n          <mat-icon class=\"ngx-gallery-icon-content\">{{ icon }}</mat-icon>\n        </div>`,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NgxGalleryActionComponent {\n    @Input() icon: string;\n    @Input() disabled = false;\n    @Input() titleText = '';\n\n    @Output() onClick: EventEmitter<Event> = new EventEmitter();\n\n    handleClick(event: Event) {\n        if (!this.disabled) {\n            this.onClick.emit(event);\n        }\n\n        event.stopPropagation();\n        event.preventDefault();\n    }\n}\n","import { Component, Input, Output, EventEmitter, } from '@angular/core';\n\n@Component({\n    selector: 'ngx-gallery-arrows',\n    template: `\n        <div class=\"ngx-gallery-arrow-wrapper ngx-gallery-arrow-left\">\n            <div class=\"ngx-gallery-icon ngx-gallery-arrow\" aria-hidden=\"true\" (click)=\"handlePrevClick()\" [class.ngx-gallery-disabled]=\"prevDisabled\">\n                <!--<i class=\"ngx-gallery-icon-content {{arrowPrevIcon}}\"></i>-->\n              <mat-icon class=\"ngx-gallery-icon-content\">{{ arrowPrevIcon }}</mat-icon>\n            </div>\n        </div>\n        <div class=\"ngx-gallery-arrow-wrapper ngx-gallery-arrow-right\">\n            <div class=\"ngx-gallery-icon ngx-gallery-arrow\" aria-hidden=\"true\" (click)=\"handleNextClick()\" [class.ngx-gallery-disabled]=\"nextDisabled\">\n                <!--<i class=\"ngx-gallery-icon-content {{arrowNextIcon}}\"></i>-->\n              <mat-icon class=\"ngx-gallery-icon-content\">{{ arrowNextIcon }}</mat-icon>\n            </div>\n        </div>\n    `,\n    styleUrls: ['./ngx-gallery-arrows.component.scss']\n})\nexport class NgxGalleryArrowsComponent {\n    @Input() prevDisabled: boolean;\n    @Input() nextDisabled: boolean;\n    @Input() arrowPrevIcon: string;\n    @Input() arrowNextIcon: string;\n\n    @Output() onPrevClick = new EventEmitter();\n    @Output() onNextClick = new EventEmitter();\n\n    handlePrevClick(): void {\n        this.onPrevClick.emit();\n    }\n\n    handleNextClick(): void {\n        this.onNextClick.emit();\n    }\n}\n","import { Component, Input, Output, EventEmitter, } from '@angular/core';\n\n@Component({\n    selector: 'ngx-gallery-bullets',\n    template: `\n        <div class=\"ngx-gallery-bullet\" *ngFor=\"let bullet of getBullets(); let i = index;\" (click)=\"handleChange($event, i)\" [ngClass]=\"{ 'ngx-gallery-active': i == active }\"></div>\n    `,\n    styleUrls: ['./ngx-gallery-bullets.component.scss']\n})\nexport class NgxGalleryBulletsComponent {\n    @Input() count: number;\n    @Input() active: number = 0;\n\n    @Output() onChange = new EventEmitter();\n\n    getBullets(): number[] {\n        return Array(this.count);\n    }\n\n    handleChange(event: Event, index: number): void {\n        this.onChange.emit(index);\n    }\n}\n","import { Injectable, ElementRef, Renderer2 } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxGalleryHelperService {\n\n    private swipeHandlers: Map<string, Function[]> = new Map<string, Function[]>();\n\n    constructor(private renderer: Renderer2) {}\n\n    manageSwipe(status: boolean, element: ElementRef, id: string, nextHandler: Function, prevHandler: Function): void {\n\n        const handlers = this.getSwipeHandlers(id);\n\n        // swipeleft and swiperight are available only if hammerjs is included\n        try {\n            if (status && !handlers) {\n                this.swipeHandlers.set(id, [\n                    this.renderer.listen(element.nativeElement, 'swipeleft', () => nextHandler()),\n                    this.renderer.listen(element.nativeElement, 'swiperight', () => prevHandler())\n                ]);\n            } else if (!status && handlers) {\n                handlers.map((handler) => handler());\n                this.removeSwipeHandlers(id);\n            }\n        } catch (e) {}\n    }\n\n    validateUrl(url: string): string {\n        if (url.replace) {\n            return url.replace(new RegExp(' ', 'g'), '%20')\n                .replace(new RegExp('\\'', 'g'), '%27');\n        } else {\n            return url;\n        }\n    }\n\n    getBackgroundUrl(image: string) {\n        return 'url(\\'' + this.validateUrl(image) + '\\')';\n    }\n\n    private getSwipeHandlers(id: string): Function[] | undefined {\n        return this.swipeHandlers.get(id);\n    }\n\n    private removeSwipeHandlers(id: string): void {\n        this.swipeHandlers.delete(id);\n    }\n}\n","export class NgxGalleryAnimation {\n    static Fade = 'fade';\n    static Slide = 'slide';\n    static Rotate = 'rotate';\n    static Zoom = 'zoom';\n}\n","import { Component, Input, Output, EventEmitter, HostListener,  ElementRef, OnInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { DomSanitizer, SafeStyle } from '@angular/platform-browser';\n\nimport { NgxGalleryHelperService } from './ngx-gallery-helper.service';\nimport { NgxGalleryOrderedImage } from './ngx-gallery-ordered-image.model';\nimport { NgxGalleryAnimation } from './ngx-gallery-animation.model';\nimport { NgxGalleryAction } from './ngx-gallery-action.model';\n\n@Component({\n    selector: 'ngx-gallery-image',\n    template: `\n        <div class=\"ngx-gallery-image-wrapper ngx-gallery-animation-{{animation}} ngx-gallery-image-size-{{size}}\">\n            <div class=\"ngx-gallery-image\" *ngFor=\"let image of getImages(); let i = index;\" [ngClass]=\"{ 'ngx-gallery-active': selectedIndex == image.index, 'ngx-gallery-inactive-left': selectedIndex > image.index, 'ngx-gallery-inactive-right': selectedIndex < image.index, 'ngx-gallery-clickable': clickable }\" [style.background-image]=\"getSafeUrl(image.src)\" (click)=\"handleClick($event, image.index)\">\n                <div class=\"ngx-gallery-icons-wrapper\">\n                    <ngx-gallery-action *ngFor=\"let action of actions\" [icon]=\"action.icon\" [disabled]=\"action.disabled\" [titleText]=\"action.titleText\" (onClick)=\"action.onClick($event, image.index)\"></ngx-gallery-action>\n                </div>\n                <div class=\"ngx-gallery-image-text\" *ngIf=\"showDescription && descriptions[image.index]\" [innerHTML]=\"descriptions[image.index]\" (click)=\"$event.stopPropagation()\"></div>\n            </div>\n        </div>\n        <ngx-gallery-bullets *ngIf=\"bullets\" [count]=\"images.length\" [active]=\"selectedIndex\" (onChange)=\"show($event)\"></ngx-gallery-bullets>\n        <ngx-gallery-arrows class=\"ngx-gallery-image-size-{{size}}\" *ngIf=\"arrows\" (onPrevClick)=\"showPrev()\" (onNextClick)=\"showNext()\" [prevDisabled]=\"!canShowPrev()\" [nextDisabled]=\"!canShowNext()\" [arrowPrevIcon]=\"arrowPrevIcon\" [arrowNextIcon]=\"arrowNextIcon\"></ngx-gallery-arrows>\n    `,\n    styleUrls: ['./ngx-gallery-image.component.scss']\n})\nexport class NgxGalleryImageComponent implements OnInit, OnChanges {\n    @Input() images: NgxGalleryOrderedImage[];\n    @Input() clickable: boolean;\n    @Input() selectedIndex: number;\n    @Input() arrows: boolean;\n    @Input() arrowsAutoHide: boolean;\n    @Input() swipe: boolean;\n    @Input() animation: string;\n    @Input() size: string;\n    @Input() arrowPrevIcon: string;\n    @Input() arrowNextIcon: string;\n    @Input() autoPlay: boolean;\n    @Input() autoPlayInterval: number;\n    @Input() autoPlayPauseOnHover: boolean;\n    @Input() infinityMove: boolean;\n    @Input() lazyLoading: boolean;\n    @Input() actions: NgxGalleryAction[];\n    @Input() descriptions: string[];\n    @Input() showDescription: boolean;\n    @Input() bullets: boolean;\n\n    @Output() onClick = new EventEmitter();\n    @Output() onActiveChange = new EventEmitter();\n\n    canChangeImage = true;\n\n    private timer;\n\n    constructor(private sanitization: DomSanitizer,\n        private elementRef: ElementRef, private helperService: NgxGalleryHelperService) {}\n\n    ngOnInit(): void {\n        if (this.arrows && this.arrowsAutoHide) {\n            this.arrows = false;\n        }\n\n        if (this.autoPlay) {\n            this.startAutoPlay();\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes['swipe']) {\n            this.helperService.manageSwipe(this.swipe, this.elementRef, 'image', () => this.showNext(), () => this.showPrev());\n        }\n    }\n\n    @HostListener('mouseenter') onMouseEnter() {\n        if (this.arrowsAutoHide && !this.arrows) {\n            this.arrows = true;\n        }\n\n        if (this.autoPlay && this.autoPlayPauseOnHover) {\n            this.stopAutoPlay();\n        }\n    }\n\n    @HostListener('mouseleave') onMouseLeave() {\n        if (this.arrowsAutoHide && this.arrows) {\n            this.arrows = false;\n        }\n\n        if (this.autoPlay && this.autoPlayPauseOnHover) {\n            this.startAutoPlay();\n        }\n    }\n\n    reset(index: number): void {\n        this.selectedIndex = index;\n    }\n\n    getImages(): NgxGalleryOrderedImage[] {\n        if (!this.images) {\n            return [];\n        }\n\n        if (this.lazyLoading) {\n            let indexes = [this.selectedIndex];\n            let prevIndex = this.selectedIndex - 1;\n\n            if (prevIndex === -1 && this.infinityMove) {\n                indexes.push(this.images.length - 1)\n            } else if (prevIndex >= 0) {\n                indexes.push(prevIndex);\n            }\n\n            let nextIndex = this.selectedIndex + 1;\n\n            if (nextIndex == this.images.length && this.infinityMove) {\n                indexes.push(0);\n            } else if (nextIndex < this.images.length) {\n                indexes.push(nextIndex);\n            }\n\n            return this.images.filter((img, i) => indexes.indexOf(i) != -1);\n        } else {\n            return this.images;\n        }\n    }\n\n    startAutoPlay(): void {\n        this.stopAutoPlay();\n\n        this.timer = setInterval(() => {\n            if (!this.showNext()) {\n                this.selectedIndex = -1;\n                this.showNext();\n            }\n        }, this.autoPlayInterval);\n    }\n\n    stopAutoPlay() {\n        if (this.timer) {\n            clearInterval(this.timer);\n        }\n    }\n\n    handleClick(event: Event, index: number): void {\n        if (this.clickable) {\n            this.onClick.emit(index);\n\n            event.stopPropagation();\n            event.preventDefault();\n        }\n    }\n\n    show(index: number) {\n        this.selectedIndex = index;\n        this.onActiveChange.emit(this.selectedIndex);\n        this.setChangeTimeout();\n    }\n\n    showNext(): boolean {\n        if (this.canShowNext() && this.canChangeImage) {\n            this.selectedIndex++;\n\n            if (this.selectedIndex === this.images.length) {\n                this.selectedIndex = 0;\n            }\n\n            this.onActiveChange.emit(this.selectedIndex);\n            this.setChangeTimeout();\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    showPrev(): void {\n        if (this.canShowPrev() && this.canChangeImage) {\n            this.selectedIndex--;\n\n            if (this.selectedIndex < 0) {\n                this.selectedIndex = this.images.length - 1;\n            }\n\n            this.onActiveChange.emit(this.selectedIndex);\n            this.setChangeTimeout();\n        }\n    }\n\n    setChangeTimeout() {\n        this.canChangeImage = false;\n        let timeout = 1000;\n\n        if (this.animation === NgxGalleryAnimation.Slide\n            || this.animation === NgxGalleryAnimation.Fade) {\n                timeout = 500;\n        }\n\n        setTimeout(() => {\n            this.canChangeImage = true;\n        }, timeout);\n    }\n\n    canShowNext(): boolean {\n        if (this.images) {\n            return this.infinityMove || this.selectedIndex < this.images.length - 1\n                ? true : false;\n        } else {\n            return false;\n        }\n    }\n\n    canShowPrev(): boolean {\n        if (this.images) {\n            return this.infinityMove || this.selectedIndex > 0 ? true : false;\n        } else {\n            return false;\n        }\n    }\n\n    getSafeUrl(image: string): SafeStyle {\n        return this.sanitization.bypassSecurityTrustStyle(this.helperService.getBackgroundUrl(image));\n    }\n}\n","export class NgxGalleryOrder {\n    static Column = 1;\n    static Row = 2;\n    static Page = 3;\n}\n","import { Component, Input, Output, EventEmitter, HostListener, OnChanges, SimpleChanges, ElementRef } from '@angular/core';\nimport { DomSanitizer, SafeStyle, SafeResourceUrl } from '@angular/platform-browser';\n\nimport { NgxGalleryHelperService } from './ngx-gallery-helper.service';\nimport { NgxGalleryOrder } from './ngx-gallery-order.model';\nimport { NgxGalleryAction } from './ngx-gallery-action.model';\n\n@Component({\n    selector: 'ngx-gallery-thumbnails',\n    template: `\n    <div class=\"ngx-gallery-thumbnails-wrapper ngx-gallery-thumbnail-size-{{size}}\">\n        <div class=\"ngx-gallery-thumbnails\" [style.transform]=\"'translateX(' + thumbnailsLeft + ')'\" [style.marginLeft]=\"thumbnailsMarginLeft\">\n            <a [href]=\"hasLink(i) ? links[i] : '#'\" [target]=\"linkTarget\" class=\"ngx-gallery-thumbnail\" *ngFor=\"let image of getImages(); let i = index;\" [style.background-image]=\"getSafeUrl(image)\" (click)=\"handleClick($event, i)\" [style.width]=\"getThumbnailWidth()\" [style.height]=\"getThumbnailHeight()\" [style.left]=\"getThumbnailLeft(i)\" [style.top]=\"getThumbnailTop(i)\" [ngClass]=\"{ 'ngx-gallery-active': i == selectedIndex, 'ngx-gallery-clickable': clickable }\" [attr.aria-label]=\"labels[i]\">\n                <div class=\"ngx-gallery-icons-wrapper\">\n                    <ngx-gallery-action *ngFor=\"let action of actions\" [icon]=\"action.icon\" [disabled]=\"action.disabled\" [titleText]=\"action.titleText\" (onClick)=\"action.onClick($event, i)\"></ngx-gallery-action>\n                </div>\n                <div class=\"ngx-gallery-remaining-count-overlay\" *ngIf=\"remainingCount && remainingCountValue && (i == (rows * columns) - 1)\">\n                    <span class=\"ngx-gallery-remaining-count\">+{{remainingCountValue}}</span>\n                </div>\n            </a>\n        </div>\n    </div>\n    <ngx-gallery-arrows *ngIf=\"canShowArrows()\" (onPrevClick)=\"moveLeft()\" (onNextClick)=\"moveRight()\" [prevDisabled]=\"!canMoveLeft()\" [nextDisabled]=\"!canMoveRight()\" [arrowPrevIcon]=\"arrowPrevIcon\" [arrowNextIcon]=\"arrowNextIcon\"></ngx-gallery-arrows>\n    `,\n    styleUrls: ['./ngx-gallery-thumbnails.component.scss']\n})\nexport class NgxGalleryThumbnailsComponent implements OnChanges {\n\n    thumbnailsLeft: string;\n    thumbnailsMarginLeft: string;\n    mouseenter: boolean;\n    remainingCountValue: number;\n\n    minStopIndex = 0;\n\n    @Input() images: string[] | SafeResourceUrl[];\n    @Input() links: string[];\n    @Input() labels: string[];\n    @Input() linkTarget: string;\n    @Input() columns: number;\n    @Input() rows: number;\n    @Input() arrows: boolean;\n    @Input() arrowsAutoHide: boolean;\n    @Input() margin: number;\n    @Input() selectedIndex: number;\n    @Input() clickable: boolean;\n    @Input() swipe: boolean;\n    @Input() size: string;\n    @Input() arrowPrevIcon: string;\n    @Input() arrowNextIcon: string;\n    @Input() moveSize: number;\n    @Input() order: number;\n    @Input() remainingCount: boolean;\n    @Input() lazyLoading: boolean;\n    @Input() actions: NgxGalleryAction[];\n\n    @Output() onActiveChange = new EventEmitter();\n\n    private index = 0;\n\n    constructor(private sanitization: DomSanitizer, private elementRef: ElementRef,\n        private helperService: NgxGalleryHelperService) {}\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes['selectedIndex']) {\n            this.validateIndex();\n        }\n\n        if (changes['swipe']) {\n            this.helperService.manageSwipe(this.swipe, this.elementRef,\n            'thumbnails', () => this.moveRight(), () => this.moveLeft());\n        }\n\n        if (this.images) {\n            this.remainingCountValue = this.images.length - (this.rows * this.columns);\n        }\n    }\n\n    @HostListener('mouseenter') onMouseEnter() {\n        this.mouseenter = true;\n    }\n\n    @HostListener('mouseleave') onMouseLeave() {\n        this.mouseenter = false;\n    }\n\n    reset(index: number): void {\n        this.selectedIndex = index;\n        this.setDefaultPosition();\n\n        this.index = 0;\n        this.validateIndex();\n    }\n\n    getImages(): string[] | SafeResourceUrl[] {\n        if (!this.images) {\n            return [];\n        }\n\n        if (this.remainingCount) {\n            return this.images.slice(0, this.rows * this.columns);\n        } \n        else if (this.lazyLoading && this.order != NgxGalleryOrder.Row) {\n            let stopIndex = 0;\n\n            if (this.order === NgxGalleryOrder.Column) {\n                stopIndex = (this.index + this.columns + this.moveSize) * this.rows;\n            }\n            else if (this.order === NgxGalleryOrder.Page) {\n                stopIndex = this.index + ((this.columns * this.rows) * 2);\n            }\n\n            if (stopIndex <= this.minStopIndex) {\n                stopIndex = this.minStopIndex;\n            } else {\n                this.minStopIndex = stopIndex;\n            }\n\n            return this.images.slice(0, stopIndex);\n        } \n        else {\n            return this.images;\n        }\n    }\n\n    handleClick(event: Event, index: number): void {\n        if (!this.hasLink(index)) {\n            this.selectedIndex = index;\n            this.onActiveChange.emit(index);\n\n            event.stopPropagation();\n            event.preventDefault();\n        }\n    }\n\n    hasLink(index: number): boolean {\n        if (this.links && this.links.length && this.links[index]) return true;\n    }\n\n    moveRight(): void {\n        if (this.canMoveRight()) {\n            this.index += this.moveSize;\n            let maxIndex = this.getMaxIndex() - this.columns;\n\n            if (this.index > maxIndex) {\n                this.index = maxIndex;\n            }\n\n            this.setThumbnailsPosition();\n        }\n    }\n\n    moveLeft(): void {\n        if (this.canMoveLeft()) {\n            this.index -= this.moveSize;\n\n            if (this.index < 0) {\n                this.index = 0;\n            }\n\n            this.setThumbnailsPosition();\n        }\n    }\n\n    canMoveRight(): boolean {\n        return this.index + this.columns < this.getMaxIndex() ? true : false;\n    }\n\n    canMoveLeft(): boolean {\n        return this.index !== 0 ? true : false;\n    }\n\n    getThumbnailLeft(index: number): SafeStyle {\n        let calculatedIndex;\n\n        if (this.order === NgxGalleryOrder.Column) {\n            calculatedIndex = Math.floor(index / this.rows);\n        }\n        else if (this.order === NgxGalleryOrder.Page) {\n            calculatedIndex = (index % this.columns) + (Math.floor(index / (this.rows * this.columns)) * this.columns);\n        }\n        else if (this.order == NgxGalleryOrder.Row && this.remainingCount) {\n            calculatedIndex = index % this.columns;\n        }\n        else {\n            calculatedIndex = index % Math.ceil(this.images.length / this.rows);\n        }\n\n        return this.getThumbnailPosition(calculatedIndex, this.columns);\n    }\n\n    getThumbnailTop(index: number): SafeStyle {\n        let calculatedIndex;\n\n        if (this.order === NgxGalleryOrder.Column) {\n            calculatedIndex = index % this.rows;\n        }\n        else if (this.order === NgxGalleryOrder.Page) {\n            calculatedIndex = Math.floor(index / this.columns) - (Math.floor(index / (this.rows * this.columns)) * this.rows);\n        }\n        else if (this.order == NgxGalleryOrder.Row && this.remainingCount) {\n            calculatedIndex = Math.floor(index / this.columns);\n        }\n        else {\n            calculatedIndex = Math.floor(index / Math.ceil(this.images.length / this.rows));\n        }\n\n        return this.getThumbnailPosition(calculatedIndex, this.rows);\n    }\n\n    getThumbnailWidth(): SafeStyle {\n        return this.getThumbnailDimension(this.columns);\n    }\n\n    getThumbnailHeight(): SafeStyle {\n        return this.getThumbnailDimension(this.rows);\n    }\n\n    setThumbnailsPosition(): void {\n        this.thumbnailsLeft = - ((100 / this.columns) * this.index) + '%'\n\n        this.thumbnailsMarginLeft = - ((this.margin - (((this.columns - 1)\n        * this.margin) / this.columns)) * this.index) + 'px';\n    }\n\n    setDefaultPosition(): void {\n        this.thumbnailsLeft = '0px';\n        this.thumbnailsMarginLeft = '0px';\n    }\n\n    canShowArrows(): boolean {\n        if (this.remainingCount) {\n            return false;\n        } else if (this.arrows && this.images && this.images.length > this.getVisibleCount()\n            && (!this.arrowsAutoHide || this.mouseenter)) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    validateIndex(): void {\n        if (this.images) {\n            let newIndex;\n\n            if (this.order === NgxGalleryOrder.Column) {\n                newIndex = Math.floor(this.selectedIndex / this.rows);\n            } else {\n                newIndex = this.selectedIndex % Math.ceil(this.images.length / this.rows);\n            }\n\n            if (this.remainingCount) {\n                newIndex = 0;\n            }\n\n            if (newIndex < this.index || newIndex >= this.index + this.columns) {\n                const maxIndex = this.getMaxIndex() - this.columns;\n                this.index = newIndex > maxIndex ? maxIndex : newIndex;\n\n                this.setThumbnailsPosition();\n            }\n        }\n    }\n\n    getSafeUrl(image: string): SafeStyle {\n        return this.sanitization.bypassSecurityTrustStyle(this.helperService.getBackgroundUrl(image));\n    }\n\n    private getThumbnailPosition(index: number, count: number): SafeStyle {\n        return this.getSafeStyle('calc(' + ((100 / count) * index) + '% + '\n            + ((this.margin - (((count - 1) * this.margin) / count)) * index) + 'px)');\n    }\n\n    private getThumbnailDimension(count: number): SafeStyle {\n        if (this.margin !== 0) {\n            return this.getSafeStyle('calc(' + (100 / count) + '% - '\n                + (((count - 1) * this.margin) / count) + 'px)');\n        } else {\n            return this.getSafeStyle('calc(' + (100 / count) + '% + 1px)');\n        }\n    }\n\n    private getMaxIndex(): number {\n        if (this.order == NgxGalleryOrder.Page) {\n            let maxIndex = (Math.floor(this.images.length / this.getVisibleCount()) * this.columns);\n\n            if (this.images.length % this.getVisibleCount() > this.columns) {\n                maxIndex += this.columns;\n            }\n            else {\n                maxIndex += this.images.length % this.getVisibleCount();\n            }\n\n            return maxIndex;\n        }\n        else {\n            return Math.ceil(this.images.length / this.rows);\n        }\n    }\n\n    private getVisibleCount(): number {\n        return this.columns * this.rows;\n    }\n\n    private getSafeStyle(value: string): SafeStyle {\n        return this.sanitization.bypassSecurityTrustStyle(value);\n    }\n}\n","import { ChangeDetectorRef, Component, Input, Output, EventEmitter, OnInit, OnChanges, SimpleChanges, ElementRef, HostListener, ViewChild, Renderer2 } from '@angular/core';\nimport { SafeResourceUrl, DomSanitizer, SafeUrl, SafeStyle } from '@angular/platform-browser';\n\nimport { NgxGalleryAction } from './ngx-gallery-action.model';\nimport { NgxGalleryHelperService } from './ngx-gallery-helper.service';\n\n@Component({\n    selector: 'ngx-gallery-preview',\n    template: `\n        <ngx-gallery-arrows *ngIf=\"arrows\" (onPrevClick)=\"showPrev()\" (onNextClick)=\"showNext()\" [prevDisabled]=\"!canShowPrev()\" [nextDisabled]=\"!canShowNext()\" [arrowPrevIcon]=\"arrowPrevIcon\" [arrowNextIcon]=\"arrowNextIcon\"></ngx-gallery-arrows>\n        <div class=\"ngx-gallery-preview-top\">\n            <div class=\"ngx-gallery-preview-icons\">\n                <ngx-gallery-action *ngFor=\"let action of actions\" [icon]=\"action.icon\" [disabled]=\"action.disabled\" [titleText]=\"action.titleText\" (onClick)=\"action.onClick($event, index)\"></ngx-gallery-action>\n                <a *ngIf=\"download && src\" [href]=\"src\" class=\"ngx-gallery-icon\" aria-hidden=\"true\" download>\n\n                  <mat-icon class=\"ngx-gallery-icon-content\">{{ downloadIcon }}</mat-icon>\n                </a>\n                <ngx-gallery-action *ngIf=\"zoom\" [icon]=\"zoomOutIcon\" [disabled]=\"!canZoomOut()\" (onClick)=\"zoomOut()\"></ngx-gallery-action>\n                <ngx-gallery-action *ngIf=\"zoom\" [icon]=\"zoomInIcon\" [disabled]=\"!canZoomIn()\" (onClick)=\"zoomIn()\"></ngx-gallery-action>\n                <ngx-gallery-action *ngIf=\"rotate\" [icon]=\"rotateLeftIcon\" (onClick)=\"rotateLeft()\"></ngx-gallery-action>\n                <ngx-gallery-action *ngIf=\"rotate\" [icon]=\"rotateRightIcon\" (onClick)=\"rotateRight()\"></ngx-gallery-action>\n                <ngx-gallery-action *ngIf=\"fullscreen\" [icon]=\"fullscreenIcon\" (onClick)=\"manageFullscreen()\"></ngx-gallery-action>\n                <ngx-gallery-action [icon]=\"closeIcon\" (onClick)=\"close()\"></ngx-gallery-action>\n            </div>\n        </div>\n        <div class=\"ngx-spinner-wrapper ngx-gallery-center\" [class.ngx-gallery-active]=\"showSpinner\">\n          <mat-icon class=\"ngx-gallery-icon-content\">{{ spinnerIcon }}</mat-icon>\n        </div>\n        <div class=\"ngx-gallery-preview-wrapper\" (click)=\"closeOnClick && close()\" (mouseup)=\"mouseUpHandler($event)\" (mousemove)=\"mouseMoveHandler($event)\" (touchend)=\"mouseUpHandler($event)\" (touchmove)=\"mouseMoveHandler($event)\">\n            <div class=\"ngx-gallery-preview-img-wrapper\">\n                <img *ngIf=\"src\" #previewImage class=\"ngx-gallery-preview-img ngx-gallery-center\" [src]=\"src\" (click)=\"$event.stopPropagation()\" (mouseenter)=\"imageMouseEnter()\" (mouseleave)=\"imageMouseLeave()\" (mousedown)=\"mouseDownHandler($event)\" (touchstart)=\"mouseDownHandler($event)\" [class.ngx-gallery-active]=\"!loading\" [class.animation]=\"animation\" [class.ngx-gallery-grab]=\"canDragOnZoom()\" [style.transform]=\"getTransform()\" [style.left]=\"positionLeft + 'px'\" [style.top]=\"positionTop + 'px'\"/>\n                <ngx-gallery-bullets *ngIf=\"bullets\" [count]=\"images.length\" [active]=\"index\" (onChange)=\"showAtIndex($event)\"></ngx-gallery-bullets>\n            </div>\n            <div class=\"ngx-gallery-preview-text\" *ngIf=\"showDescription && description\" [innerHTML]=\"description\" (click)=\"$event.stopPropagation()\"></div>\n        </div>\n    `,\n    styleUrls: ['./ngx-gallery-preview.component.scss']\n})\nexport class NgxGalleryPreviewComponent implements OnInit, OnChanges {\n\n    src: SafeUrl;\n    srcIndex: number;\n    description: string;\n    showSpinner = false;\n    positionLeft = 0;\n    positionTop = 0;\n    zoomValue = 1;\n    loading = false;\n    rotateValue = 0;\n    index = 0;\n\n    @Input() images: string[] | SafeResourceUrl[];\n    @Input() descriptions: string[];\n    @Input() showDescription: boolean;\n    @Input() arrows: boolean;\n    @Input() arrowsAutoHide: boolean;\n    @Input() swipe: boolean;\n    @Input() fullscreen: boolean;\n    @Input() forceFullscreen: boolean;\n    @Input() closeOnClick: boolean;\n    @Input() closeOnEsc: boolean;\n    @Input() keyboardNavigation: boolean;\n    @Input() arrowPrevIcon: string;\n    @Input() arrowNextIcon: string;\n    @Input() closeIcon: string;\n    @Input() fullscreenIcon: string;\n    @Input() spinnerIcon: string;\n    @Input() autoPlay: boolean;\n    @Input() autoPlayInterval: number;\n    @Input() autoPlayPauseOnHover: boolean;\n    @Input() infinityMove: boolean;\n    @Input() zoom: boolean;\n    @Input() zoomStep: number;\n    @Input() zoomMax: number;\n    @Input() zoomMin: number;\n    @Input() zoomInIcon: string;\n    @Input() zoomOutIcon: string;\n    @Input() animation: boolean;\n    @Input() actions: NgxGalleryAction[];\n    @Input() rotate: boolean;\n    @Input() rotateLeftIcon: string;\n    @Input() rotateRightIcon: string;\n    @Input() download: boolean;\n    @Input() downloadIcon: string;\n    @Input() bullets: string;\n\n    @Output() onOpen = new EventEmitter();\n    @Output() onClose = new EventEmitter();\n    @Output() onActiveChange = new EventEmitter<number>();\n\n    // @ts-ignore\n    @ViewChild('previewImage') previewImage: ElementRef;\n\n    private isOpen = false;\n    private timer;\n    private initialX = 0;\n    private initialY = 0;\n    private initialLeft = 0;\n    private initialTop = 0;\n    private isMove = false;\n\n    private keyDownListener: Function;\n\n    constructor(private sanitization: DomSanitizer, private elementRef: ElementRef,\n        private helperService: NgxGalleryHelperService, private renderer: Renderer2,\n        private changeDetectorRef: ChangeDetectorRef) {}\n\n    ngOnInit(): void {\n        if (this.arrows && this.arrowsAutoHide) {\n            this.arrows = false;\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes['swipe']) {\n            this.helperService.manageSwipe(this.swipe, this.elementRef,\n            'preview', () => this.showNext(), () => this.showPrev());\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.keyDownListener) {\n            this.keyDownListener();\n        }\n    }\n\n    @HostListener('mouseenter') onMouseEnter() {\n        if (this.arrowsAutoHide && !this.arrows) {\n            this.arrows = true;\n        }\n    }\n\n    @HostListener('mouseleave') onMouseLeave() {\n        if (this.arrowsAutoHide && this.arrows) {\n            this.arrows = false;\n        }\n    }\n\n    onKeyDown(e) {\n        if (this.isOpen) {\n            if (this.keyboardNavigation) {\n                if (this.isKeyboardPrev(e)) {\n                    this.showPrev();\n                } else if (this.isKeyboardNext(e)) {\n                    this.showNext();\n                }\n            }\n            if (this.closeOnEsc && this.isKeyboardEsc(e)) {\n                this.close();\n            }\n        }\n    }\n\n    open(index: number): void {\n        this.onOpen.emit();\n\n        this.index = index;\n        this.isOpen = true;\n        this.show(true);\n\n        if (this.forceFullscreen) {\n            this.manageFullscreen();\n        }\n\n        this.keyDownListener = this.renderer.listen(\"window\", \"keydown\", (e) => this.onKeyDown(e));\n    }\n\n    close(): void {\n        this.isOpen = false;\n        this.closeFullscreen();\n        this.onClose.emit();\n\n        this.stopAutoPlay();\n\n        if (this.keyDownListener) {\n            this.keyDownListener();\n        }\n    }\n\n    imageMouseEnter(): void {\n        if (this.autoPlay && this.autoPlayPauseOnHover) {\n            this.stopAutoPlay();\n        }\n    }\n\n    imageMouseLeave(): void {\n        if (this.autoPlay && this.autoPlayPauseOnHover) {\n            this.startAutoPlay();\n        }\n    }\n\n    startAutoPlay(): void {\n        if (this.autoPlay) {\n            this.stopAutoPlay();\n\n            this.timer = setTimeout(() => {\n                if (!this.showNext()) {\n                    this.index = -1;\n                    this.showNext();\n                }\n            }, this.autoPlayInterval);\n        }\n    }\n\n    stopAutoPlay(): void {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n    }\n\n    showAtIndex(index: number): void {\n        this.index = index;\n        this.show();\n    }\n\n    showNext(): boolean {\n        if (this.canShowNext()) {\n            this.index++;\n\n            if (this.index === this.images.length) {\n                this.index = 0;\n            }\n\n            this.show();\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    showPrev(): void {\n        if (this.canShowPrev()) {\n            this.index--;\n\n            if (this.index < 0) {\n                this.index = this.images.length - 1;\n            }\n\n            this.show();\n        }\n    }\n\n    canShowNext(): boolean {\n        if (this.loading) {\n            return false;\n        } else if (this.images) {\n            return this.infinityMove || this.index < this.images.length - 1 ? true : false;\n        } else {\n            return false;\n        }\n    }\n\n    canShowPrev(): boolean {\n        if (this.loading) {\n            return false;\n        } else if (this.images) {\n            return this.infinityMove || this.index > 0 ? true : false;\n        } else {\n            return false;\n        }\n    }\n\n    manageFullscreen(): void {\n        if (this.fullscreen || this.forceFullscreen) {\n            const doc = <any>document;\n\n            if (!doc.fullscreenElement && !doc.mozFullScreenElement\n                && !doc.webkitFullscreenElement && !doc.msFullscreenElement) {\n                this.openFullscreen();\n            } else {\n                this.closeFullscreen();\n            }\n        }\n    }\n\n    getSafeUrl(image: string): SafeUrl {\n        return image.substr(0, 10) === 'data:image' ?\n            image : this.sanitization.bypassSecurityTrustUrl(image);\n    }\n\n    zoomIn(): void {\n        if (this.canZoomIn()) {\n            this.zoomValue += this.zoomStep;\n\n            if (this.zoomValue > this.zoomMax) {\n                this.zoomValue = this.zoomMax;\n            }\n        }\n    }\n\n    zoomOut(): void {\n        if (this.canZoomOut()) {\n            this.zoomValue -= this.zoomStep;\n\n            if (this.zoomValue < this.zoomMin) {\n                this.zoomValue = this.zoomMin;\n            }\n\n            if (this.zoomValue <= 1) {\n                this.resetPosition()\n            }\n        }\n    }\n\n    rotateLeft(): void {\n        this.rotateValue -= 90;\n    }\n\n    rotateRight(): void {\n        this.rotateValue += 90;\n    }\n\n    getTransform(): SafeStyle {\n        return this.sanitization.bypassSecurityTrustStyle('scale(' + this.zoomValue + ') rotate(' + this.rotateValue + 'deg)');\n    }\n\n    canZoomIn(): boolean {\n        return this.zoomValue < this.zoomMax ? true : false;\n    }\n\n    canZoomOut(): boolean {\n        return this.zoomValue > this.zoomMin ? true : false;\n    }\n\n    canDragOnZoom() {\n        return this.zoom && this.zoomValue > 1;\n    }\n\n    mouseDownHandler(e): void {\n        if (this.canDragOnZoom()) {\n            this.initialX = this.getClientX(e);\n            this.initialY = this.getClientY(e);\n            this.initialLeft = this.positionLeft;\n            this.initialTop = this.positionTop;\n            this.isMove = true;\n\n            e.preventDefault();\n        }\n    }\n\n    mouseUpHandler(e): void {\n        this.isMove = false;\n    }\n\n    mouseMoveHandler(e) {\n        if (this.isMove) {\n            this.positionLeft = this.initialLeft + (this.getClientX(e) - this.initialX);\n            this.positionTop = this.initialTop + (this.getClientY(e) - this.initialY);\n        }\n    }\n\n    private getClientX(e): number {\n        return e.touches && e.touches.length ? e.touches[0].clientX : e.clientX;\n    }\n\n    private getClientY(e): number {\n        return e.touches && e.touches.length ? e.touches[0].clientY : e.clientY;\n    }\n\n    private resetPosition() {\n        if (this.zoom) {\n            this.positionLeft = 0;\n            this.positionTop = 0;\n        }\n    }\n\n    private isKeyboardNext(e): boolean {\n        return e.keyCode === 39 ? true : false;\n    }\n\n    private isKeyboardPrev(e): boolean {\n        return e.keyCode === 37 ? true : false;\n    }\n\n    private isKeyboardEsc(e): boolean {\n        return e.keyCode === 27 ? true : false;\n    }\n\n    private openFullscreen(): void {\n        const element = <any>document.documentElement;\n\n        if (element.requestFullscreen) {\n            element.requestFullscreen();\n        } else if (element.msRequestFullscreen) {\n            element.msRequestFullscreen();\n        } else if (element.mozRequestFullScreen) {\n            element.mozRequestFullScreen();\n        } else if (element.webkitRequestFullscreen) {\n            element.webkitRequestFullscreen();\n        }\n    }\n\n    private closeFullscreen(): void {\n        if (this.isFullscreen()) {\n            const doc = <any>document;\n\n            if (doc.exitFullscreen) {\n                doc.exitFullscreen();\n            } else if (doc.msExitFullscreen) {\n                doc.msExitFullscreen();\n            } else if (doc.mozCancelFullScreen) {\n                doc.mozCancelFullScreen();\n            } else if (doc.webkitExitFullscreen) {\n                doc.webkitExitFullscreen();\n            }\n        }\n    }\n\n    private isFullscreen() {\n        const doc = <any>document;\n\n        return doc.fullscreenElement || doc.webkitFullscreenElement\n            || doc.mozFullScreenElement || doc.msFullscreenElement;\n    }\n\n\n\n    private show(first = false) {\n        this.loading = true;\n        this.stopAutoPlay();\n\n        this.onActiveChange.emit(this.index);\n\n        if (first || !this.animation) {\n            this._show();\n        } else {\n            setTimeout(() => this._show(), 600);\n        }\n    }\n\n    private _show() {\n        this.zoomValue = 1;\n        this.rotateValue = 0;\n        this.resetPosition();\n\n        this.src = this.getSafeUrl(<string>this.images[this.index]);\n        this.srcIndex = this.index;\n        this.description = this.descriptions[this.index];\n        this.changeDetectorRef.markForCheck();\n\n        setTimeout(() => {\n            if (this.isLoaded(this.previewImage.nativeElement)) {\n                this.loading = false;\n                this.startAutoPlay();\n                this.changeDetectorRef.markForCheck();\n            } else {\n                setTimeout(() => {\n                    if (this.loading) {\n                        this.showSpinner = true;\n                        this.changeDetectorRef.markForCheck();\n                    }\n                })\n\n                this.previewImage.nativeElement.onload = () => {\n                    this.loading = false;\n                    this.showSpinner = false;\n                    this.previewImage.nativeElement.onload = null;\n                    this.startAutoPlay();\n                    this.changeDetectorRef.markForCheck();\n                }\n            }\n        })\n    }\n\n    private isLoaded(img): boolean {\n        if (!img.complete) {\n            return false;\n        }\n\n        if (typeof img.naturalWidth !== 'undefined' && img.naturalWidth === 0) {\n            return false;\n        }\n\n        return true;\n    }\n}\n","export class NgxGalleryImageSize {\n    static Cover = 'cover';\n    static Contain = 'contain';\n}\n","export class NgxGalleryLayout {\n    static ThumbnailsTop = 'thumbnails-top';\n    static ThumbnailsBottom = 'thumbnails-bottom';\n}\n","export interface INgxGalleryAction {\n    icon: string;\n    disabled?: boolean;\n    titleText?: string;\n\n    onClick: (event: Event, index: number) => void;\n}\n\nexport class NgxGalleryAction implements INgxGalleryAction {\n    icon: string;\n    disabled?: boolean;\n    titleText?: string;\n\n    onClick: (event: Event, index: number) => void;\n\n    constructor(action: INgxGalleryAction) {\n        this.icon = action.icon;\n        this.disabled = action.disabled ? action.disabled : false;\n        this.titleText = action.titleText ? action.titleText : '';\n\n        this.onClick = action.onClick;\n    }\n}\n","import { NgxGalleryAnimation } from './ngx-gallery-animation.model';\nimport { NgxGalleryImageSize } from './ngx-gallery-image-size.model';\nimport { NgxGalleryLayout } from './ngx-gallery-layout.model';\nimport { NgxGalleryOrder } from './ngx-gallery-order.model';\nimport { NgxGalleryAction } from './ngx-gallery-action.model';\nimport {Input} from '@angular/core';\n\nexport interface INgxGalleryOptions {\n    width?: string;\n    height?: string;\n    breakpoint?: number;\n    fullWidth?: boolean;\n    layout?: string;\n    startIndex?: number;\n    linkTarget?: string;\n    lazyLoading?: boolean;\n    image?: boolean;\n    imagePercent?: number;\n    imageArrows?: boolean;\n    imageArrowsAutoHide?: boolean;\n    imageSwipe?: boolean;\n    imageAnimation?: string;\n    imageSize?: string;\n    imageAutoPlay?: boolean;\n    imageAutoPlayInterval?: number;\n    imageAutoPlayPauseOnHover?: boolean;\n    imageInfinityMove?: boolean;\n    imageActions?: NgxGalleryAction[];\n    imageDescription?: boolean;\n    imageBullets?: boolean;\n    thumbnails?: boolean;\n    thumbnailsColumns?: number;\n    thumbnailsRows?: number;\n    thumbnailsPercent?: number;\n    thumbnailsMargin?: number;\n    thumbnailsArrows?: boolean;\n    thumbnailsArrowsAutoHide?: boolean;\n    thumbnailsSwipe?: boolean;\n    thumbnailsMoveSize?: number;\n    thumbnailsOrder?: NgxGalleryOrder;\n    thumbnailsRemainingCount?: boolean;\n    thumbnailsAsLinks?: boolean;\n    thumbnailsAutoHide?: boolean;\n    thumbnailMargin?: number;\n    thumbnailSize?: string;\n    thumbnailActions?: NgxGalleryAction[];\n    preview?: boolean;\n    previewDescription?: boolean;\n    previewArrows?: boolean;\n    previewArrowsAutoHide?: boolean;\n    previewSwipe?: boolean;\n    previewFullscreen?: boolean;\n    previewForceFullscreen?: boolean;\n    previewCloseOnClick?: boolean;\n    previewCloseOnEsc?: boolean;\n    previewKeyboardNavigation?: boolean;\n    previewAnimation?: boolean;\n    previewAutoPlay?: boolean;\n    previewAutoPlayInterval?: number;\n    previewAutoPlayPauseOnHover?: boolean;\n    previewInfinityMove?: boolean;\n    previewZoom?: boolean;\n    previewZoomStep?: number;\n    previewZoomMax?: number;\n    previewZoomMin?: number;\n    previewRotate?: boolean;\n    previewDownload?: boolean;\n    previewCustom?: (index: number) => void;\n    previewBullets?: boolean;\n    arrowPrevIcon?: string;\n    arrowNextIcon?: string;\n    closeIcon?: string;\n    fullscreenIcon?: string;\n    spinnerIcon?: string;\n    zoomInIcon?: string;\n    zoomOutIcon?: string;\n    rotateLeftIcon?: string;\n    rotateRightIcon?: string;\n    downloadIcon?: string;\n    previewPrevIconOption?: string;\n    previewNextIconOption?: string;\n    actions?: NgxGalleryAction[];\n}\n\nexport class NgxGalleryOptions implements INgxGalleryOptions {\n    width?: string;\n    height?: string;\n    breakpoint?: number;\n    fullWidth?: boolean;\n    layout?: string;\n    startIndex?: number;\n    linkTarget?: string;\n    lazyLoading?: boolean;\n    image?: boolean;\n    imagePercent?: number;\n    imageArrows?: boolean;\n    imageArrowsAutoHide?: boolean;\n    imageSwipe?: boolean;\n    imageAnimation?: string;\n    imageSize?: string;\n    imageAutoPlay?: boolean;\n    imageAutoPlayInterval?: number;\n    imageAutoPlayPauseOnHover?: boolean;\n    imageInfinityMove?: boolean;\n    imageActions?: NgxGalleryAction[];\n    imageDescription?: boolean;\n    imageBullets?: boolean;\n    thumbnails?: boolean;\n    thumbnailsColumns?: number;\n    thumbnailsRows?: number;\n    thumbnailsPercent?: number;\n    thumbnailsMargin?: number;\n    thumbnailsArrows?: boolean;\n    thumbnailsArrowsAutoHide?: boolean;\n    thumbnailsSwipe?: boolean;\n    thumbnailsMoveSize?: number;\n    thumbnailsOrder?: NgxGalleryOrder;\n    thumbnailsRemainingCount?: boolean;\n    thumbnailsAsLinks?: boolean;\n    thumbnailsAutoHide?: boolean;\n    thumbnailMargin?: number;\n    thumbnailSize?: string;\n    thumbnailActions?: NgxGalleryAction[];\n    preview?: boolean;\n    previewDescription?: boolean;\n    previewArrows?: boolean;\n    previewArrowsAutoHide?: boolean;\n    previewSwipe?: boolean;\n    previewFullscreen?: boolean;\n    previewForceFullscreen?: boolean;\n    previewCloseOnClick?: boolean;\n    previewCloseOnEsc?: boolean;\n    previewKeyboardNavigation?: boolean;\n    previewAnimation?: boolean;\n    previewAutoPlay?: boolean;\n    previewAutoPlayInterval?: number;\n    previewAutoPlayPauseOnHover?: boolean;\n    previewInfinityMove?: boolean;\n    previewZoom?: boolean;\n    previewZoomStep?: number;\n    previewZoomMax?: number;\n    previewZoomMin?: number;\n    previewRotate?: boolean;\n    previewDownload?: boolean;\n    previewCustom?: (index: number) => void;\n    previewBullets?: boolean;\n    arrowPrevIcon?: string;\n    arrowNextIcon?: string;\n    closeIcon?: string;\n    fullscreenIcon?: string;\n    spinnerIcon?: string;\n    zoomInIcon?: string;\n    zoomOutIcon?: string;\n    rotateLeftIcon?: string;\n    rotateRightIcon?: string;\n    downloadIcon?: string;\n    previewPrevIconOption?: string;\n    previewNextIconOption?: string;\n    actions?: NgxGalleryAction[];\n\n    constructor(obj: INgxGalleryOptions) {\n\n        const preventDefaults = obj.breakpoint === undefined ? false : true;\n\n        function use<T>(source: T, defaultValue: T): T {\n            return obj && (source !== undefined || preventDefaults) ? source : defaultValue;\n        }\n\n        this.breakpoint = use(obj.breakpoint, undefined);\n        this.width = use(obj.width, '500px');\n        this.height = use(obj.height, '400px');\n        this.fullWidth = use(obj.fullWidth, false);\n        this.layout = use(obj.layout, NgxGalleryLayout.ThumbnailsBottom);\n        this.startIndex = use(obj.startIndex, 0);\n        this.linkTarget = use(obj.linkTarget, '_blank');\n        this.lazyLoading = use(obj.lazyLoading, true);\n\n        this.image = use(obj.image, true);\n        this.imagePercent = use(obj.imagePercent, 75);\n        this.imageArrows = use(obj.imageArrows, true);\n        this.imageArrowsAutoHide = use(obj.imageArrowsAutoHide, false);\n        this.imageSwipe = use(obj.imageSwipe, false);\n        this.imageAnimation = use(obj.imageAnimation, NgxGalleryAnimation.Fade);\n        this.imageSize = use(obj.imageSize, NgxGalleryImageSize.Cover);\n        this.imageAutoPlay = use(obj.imageAutoPlay, false);\n        this.imageAutoPlayInterval = use(obj.imageAutoPlayInterval, 2000);\n        this.imageAutoPlayPauseOnHover = use(obj.imageAutoPlayPauseOnHover, false);\n        this.imageInfinityMove = use(obj.imageInfinityMove, false);\n        if (obj && obj.imageActions && obj.imageActions.length) {\n            obj.imageActions = obj.imageActions.map(action => new NgxGalleryAction(action));\n        }\n        this.imageActions = use(obj.imageActions, []);\n        this.imageDescription = use(obj.imageDescription, false);\n        this.imageBullets = use(obj.imageBullets, false);\n\n        this.thumbnails = use(obj.thumbnails, true);\n        this.thumbnailsColumns = use(obj.thumbnailsColumns, 4);\n        this.thumbnailsRows = use(obj.thumbnailsRows, 1);\n        this.thumbnailsPercent = use(obj.thumbnailsPercent, 25);\n        this.thumbnailsMargin = use(obj.thumbnailsMargin, 10);\n        this.thumbnailsArrows = use(obj.thumbnailsArrows, true);\n        this.thumbnailsArrowsAutoHide = use(obj.thumbnailsArrowsAutoHide, false);\n        this.thumbnailsSwipe = use(obj.thumbnailsSwipe, false);\n        this.thumbnailsMoveSize = use(obj.thumbnailsMoveSize, 1);\n        this.thumbnailsOrder = use(obj.thumbnailsOrder, NgxGalleryOrder.Column);\n        this.thumbnailsRemainingCount = use(obj.thumbnailsRemainingCount, false);\n        this.thumbnailsAsLinks = use(obj.thumbnailsAsLinks, false);\n        this.thumbnailsAutoHide = use(obj.thumbnailsAutoHide, false);\n        this.thumbnailMargin = use(obj.thumbnailMargin, 10);\n        this.thumbnailSize = use(obj.thumbnailSize, NgxGalleryImageSize.Cover);\n        if (obj && obj.thumbnailActions && obj.thumbnailActions.length) {\n            obj.thumbnailActions = obj.thumbnailActions.map(action => new NgxGalleryAction(action));\n        }\n        this.thumbnailActions = use(obj.thumbnailActions, []);\n\n        this.preview = use(obj.preview, true);\n        this.previewDescription = use(obj.previewDescription, true);\n        this.previewArrows = use(obj.previewArrows, true);\n        this.previewArrowsAutoHide = use(obj.previewArrowsAutoHide, false);\n        this.previewSwipe = use(obj.previewSwipe, false);\n        this.previewFullscreen = use(obj.previewFullscreen, false);\n        this.previewForceFullscreen = use(obj.previewForceFullscreen, false);\n        this.previewCloseOnClick = use(obj.previewCloseOnClick, false);\n        this.previewCloseOnEsc = use(obj.previewCloseOnEsc, false);\n        this.previewKeyboardNavigation = use(obj.previewKeyboardNavigation, false);\n        this.previewAnimation = use(obj.previewAnimation, true);\n        this.previewAutoPlay = use(obj.previewAutoPlay, false);\n        this.previewAutoPlayInterval = use(obj.previewAutoPlayInterval, 2000);\n        this.previewAutoPlayPauseOnHover = use(obj.previewAutoPlayPauseOnHover, false);\n        this.previewInfinityMove = use(obj.previewInfinityMove, false);\n        this.previewZoom = use(obj.previewZoom, false);\n        this.previewZoomStep = use(obj.previewZoomStep, 0.1);\n        this.previewZoomMax = use(obj.previewZoomMax, 2);\n        this.previewZoomMin = use(obj.previewZoomMin, 0.5);\n        this.previewRotate = use(obj.previewRotate, false);\n        this.previewDownload = use(obj.previewDownload, false);\n        this.previewCustom = use(obj.previewCustom, undefined);\n        this.previewBullets = use(obj.previewBullets, false);\n\n        // this.arrowPrevIcon = use(obj.arrowPrevIcon, 'fa fa-arrow-circle-left');\n        // this.arrowNextIcon = use(obj.arrowNextIcon, 'fa fa-arrow-circle-right');\n        // this.closeIcon = use(obj.closeIcon, 'fa fa-times-circle');\n        // this.fullscreenIcon = use(obj.fullscreenIcon, 'fa fa-arrows-alt');\n        // this.spinnerIcon = use(obj.spinnerIcon, 'fa fa-spinner fa-pulse fa-3x fa-fw');\n        // this.zoomInIcon = use(obj.zoomInIcon, 'fa fa-search-plus');\n        // this.zoomOutIcon = use(obj.zoomOutIcon, 'fa fa-search-minus');\n        // this.rotateLeftIcon = use(obj.rotateLeftIcon, 'fa fa-undo');\n        // this.rotateRightIcon = use(obj.rotateRightIcon, 'fa fa-repeat');\n        // this.downloadIcon = use(obj.downloadIcon, 'fa fa-arrow-circle-down');\n\n        this.arrowPrevIcon = use(obj.arrowPrevIcon, 'arrow_back_ios');\n        this.arrowNextIcon = use(obj.arrowNextIcon, 'arrow_forward_ios');\n        this.closeIcon = use(obj.closeIcon, 'close');\n        this.fullscreenIcon = use(obj.fullscreenIcon, 'fullscreen');\n        this.spinnerIcon = use(obj.spinnerIcon, 'spinner');\n        this.zoomInIcon = use(obj.zoomInIcon, 'zoom_in');\n        this.zoomOutIcon = use(obj.zoomOutIcon, 'zoom_out');\n        this.rotateLeftIcon = use(obj.rotateLeftIcon, 'rotate_left');\n        this.rotateRightIcon = use(obj.rotateRightIcon, 'rotate_right');\n        this.downloadIcon = use(obj.downloadIcon, 'cloud_download');\n        this.previewPrevIconOption = use(obj.previewPrevIconOption, 'arrow_back_ios');\n        this.previewNextIconOption = use(obj.previewNextIconOption, 'arrow_forward_ios');\n\n        if (obj && obj.actions && obj.actions.length) {\n            obj.actions = obj.actions.map(action => new NgxGalleryAction(action));\n        }\n        this.actions = use(obj.actions, []);\n    }\n}\n","import { SafeResourceUrl } from '@angular/platform-browser';\n\nexport interface INgxGalleryOrderedImage {\n    src: string | SafeResourceUrl;\n    index: number;\n}\n\nexport class NgxGalleryOrderedImage implements INgxGalleryOrderedImage {\n    src: string | SafeResourceUrl;\n    index: number;\n\n    constructor(obj: INgxGalleryOrderedImage) {\n        this.src = obj.src;\n        this.index = obj.index;\n    }\n}\n","import { Component, Input, HostListener, ViewChild, OnInit,\n    HostBinding, DoCheck, ElementRef, AfterViewInit, Output, EventEmitter } from '@angular/core';\nimport { SafeResourceUrl } from '@angular/platform-browser';\n\nimport { NgxGalleryPreviewComponent } from './ngx-gallery-preview.component';\nimport { NgxGalleryImageComponent } from './ngx-gallery-image.component';\nimport { NgxGalleryThumbnailsComponent } from './ngx-gallery-thumbnails.component';\nimport { NgxGalleryHelperService } from './ngx-gallery-helper.service';\n\nimport { NgxGalleryOptions } from './ngx-gallery-options.model';\nimport { NgxGalleryImage } from './ngx-gallery-image.model';\nimport { NgxGalleryLayout } from './ngx-gallery-layout.model';\nimport { NgxGalleryOrderedImage } from './ngx-gallery-ordered-image.model';\n\n@Component({\n    selector: 'ngx-gallery',\n    template: `\n    <div class=\"ngx-gallery-layout {{currentOptions?.layout}}\">\n        <ngx-gallery-image *ngIf=\"currentOptions?.image\" [style.height]=\"getImageHeight()\" [images]=\"mediumImages\" [clickable]=\"currentOptions?.preview\" [selectedIndex]=\"selectedIndex\" [arrows]=\"currentOptions?.imageArrows\" [arrowsAutoHide]=\"currentOptions?.imageArrowsAutoHide\" [arrowPrevIcon]=\"currentOptions?.arrowPrevIcon\" [arrowNextIcon]=\"currentOptions?.arrowNextIcon\" [swipe]=\"currentOptions?.imageSwipe\" [animation]=\"currentOptions?.imageAnimation\" [size]=\"currentOptions?.imageSize\" [autoPlay]=\"currentOptions?.imageAutoPlay\" [autoPlayInterval]=\"currentOptions?.imageAutoPlayInterval\" [autoPlayPauseOnHover]=\"currentOptions?.imageAutoPlayPauseOnHover\" [infinityMove]=\"currentOptions?.imageInfinityMove\"  [lazyLoading]=\"currentOptions?.lazyLoading\" [actions]=\"currentOptions?.imageActions\" [descriptions]=\"descriptions\" [showDescription]=\"currentOptions?.imageDescription\" [bullets]=\"currentOptions?.imageBullets\" (onClick)=\"openPreview($event)\" (onActiveChange)=\"selectFromImage($event)\"></ngx-gallery-image>\n\n        <ngx-gallery-thumbnails *ngIf=\"currentOptions?.thumbnails\" [style.marginTop]=\"getThumbnailsMarginTop()\" [style.marginBottom]=\"getThumbnailsMarginBottom()\" [style.height]=\"getThumbnailsHeight()\" [images]=\"smallImages\" [links]=\"currentOptions?.thumbnailsAsLinks ? links : []\" [labels]=\"labels\" [linkTarget]=\"currentOptions?.linkTarget\" [selectedIndex]=\"selectedIndex\" [columns]=\"currentOptions?.thumbnailsColumns\" [rows]=\"currentOptions?.thumbnailsRows\" [margin]=\"currentOptions?.thumbnailMargin\" [arrows]=\"currentOptions?.thumbnailsArrows\" [arrowsAutoHide]=\"currentOptions?.thumbnailsArrowsAutoHide\" [arrowPrevIcon]=\"currentOptions?.arrowPrevIcon\" [arrowNextIcon]=\"currentOptions?.arrowNextIcon\" [clickable]=\"currentOptions?.image || currentOptions?.preview\" [swipe]=\"currentOptions?.thumbnailsSwipe\" [size]=\"currentOptions?.thumbnailSize\" [moveSize]=\"currentOptions?.thumbnailsMoveSize\" [order]=\"currentOptions?.thumbnailsOrder\" [remainingCount]=\"currentOptions?.thumbnailsRemainingCount\" [lazyLoading]=\"currentOptions?.lazyLoading\" [actions]=\"currentOptions?.thumbnailActions\"  (onActiveChange)=\"selectFromThumbnails($event)\"></ngx-gallery-thumbnails>\n\n        <ngx-gallery-preview \n        [images]=\"bigImages\" \n        [descriptions]=\"descriptions\" \n        [arrowPrevIcon]=\"currentOptions?.previewPrevIconOption\" \n        [arrowNextIcon]=\"currentOptions?.previewNextIconOption\" \n        [closeIcon]=\"currentOptions?.closeIcon\" \n        [fullscreenIcon]=\"currentOptions?.fullscreenIcon\" \n        [spinnerIcon]=\"currentOptions?.spinnerIcon\" \n        [arrows]=\"currentOptions?.previewArrows\" \n        [arrowsAutoHide]=\"currentOptions?.previewArrowsAutoHide\" \n        [swipe]=\"currentOptions?.previewSwipe\" \n        [fullscreen]=\"currentOptions?.previewFullscreen\" \n        [forceFullscreen]=\"currentOptions?.previewForceFullscreen\" \n        [closeOnClick]=\"currentOptions?.previewCloseOnClick\" \n        [closeOnEsc]=\"currentOptions?.previewCloseOnEsc\" \n        [keyboardNavigation]=\"currentOptions?.previewKeyboardNavigation\" \n        [animation]=\"currentOptions?.previewAnimation\" \n        [autoPlay]=\"currentOptions?.previewAutoPlay\" \n        [autoPlayInterval]=\"currentOptions?.previewAutoPlayInterval\" \n        [autoPlayPauseOnHover]=\"currentOptions?.previewAutoPlayPauseOnHover\" \n        [infinityMove]=\"currentOptions?.imageInfinityMove\" \n        [zoom]=\"currentOptions?.previewZoom\" \n        [zoomStep]=\"currentOptions?.previewZoomStep\" \n        [zoomMax]=\"currentOptions?.previewZoomMax\" \n        [zoomMin]=\"currentOptions?.previewZoomMin\" \n        [zoomInIcon]=\"currentOptions?.zoomInIcon\" \n        [zoomOutIcon]=\"currentOptions?.zoomOutIcon\" \n        [actions]=\"currentOptions?.actions\" \n        [rotate]=\"currentOptions?.previewRotate\" \n        [rotateLeftIcon]=\"currentOptions?.rotateLeftIcon\" \n        [rotateRightIcon]=\"currentOptions?.rotateRightIcon\" \n        [download]=\"currentOptions?.previewDownload\" \n        [downloadIcon]=\"currentOptions?.downloadIcon\" \n        [bullets]=\"currentOptions?.previewBullets\" \n        (onClose)=\"onPreviewClose()\" \n        (onOpen)=\"onPreviewOpen()\" \n        (onActiveChange)=\"previewSelect($event)\" \n        [class.ngx-gallery-active]=\"previewEnabled\" \n        [showDescription]=\"currentOptions?.imageDescription\">\n        </ngx-gallery-preview>\n    </div>\n    `,\n    styleUrls: ['./ngx-gallery.component.scss'],\n    providers: [NgxGalleryHelperService]\n})\nexport class NgxGalleryComponent implements OnInit, DoCheck, AfterViewInit   {\n    @Input() options: NgxGalleryOptions[];\n    @Input() images: NgxGalleryImage[];\n\n    @Output() imagesReady = new EventEmitter();\n    @Output() change = new EventEmitter<{ index: number; image: NgxGalleryImage; }>();\n    @Output() previewOpen = new EventEmitter();\n    @Output() previewClose = new EventEmitter();\n    @Output() previewChange = new EventEmitter<{ index: number; image: NgxGalleryImage; }>();\n\n    @Input() widthOption: string;\n    @Input() heightOption: string;\n    @Input() thumbnailsColumnsOption: number;\n    @Input() startIndexOption: number;\n    @Input() imageDescriptionOption: boolean;\n    @Input() imageArrowsOption: boolean;\n    @Input() thumbnailsArrowsOption: boolean;\n    @Input() previewArrowsOption: boolean;\n    @Input() imageSwipeOption: boolean;\n    @Input() thumbnailsSwipeOption: boolean;\n    @Input() previewSwipeOption: boolean;\n    @Input() imageAutoPlayOption: boolean;\n    @Input() imageAutoPlayIntervalOption: number;\n    @Input() imageAutoPlayPauseOnHoverOption: boolean;\n    @Input() imageInfinityMoveOption: boolean;\n    @Input() previewOption: boolean;\n    @Input() arrowPrevIconOption: string;\n    @Input() arrowNextIconOption: string;\n    @Input() previewPrevIconOption: string;\n    @Input() previewNextIconOption: string;\n    @Input() thumbnailsOption: boolean;\n\n  smallImages: string[] | SafeResourceUrl[];\n    mediumImages: NgxGalleryOrderedImage[];\n    bigImages: string[] | SafeResourceUrl[];\n    descriptions: string[];\n    links: string[];\n    labels: string[];\n\n    oldImages: NgxGalleryImage[];\n    oldImagesLength = 0;\n\n    selectedIndex = 0;\n    previewEnabled: boolean;\n\n    currentOptions: NgxGalleryOptions;\n\n    private breakpoint: number | undefined = undefined;\n    private prevBreakpoint: number | undefined = undefined;\n    private fullWidthTimeout: any;\n\n    // @ts-ignore\n    @ViewChild(NgxGalleryPreviewComponent) preview: NgxGalleryPreviewComponent;\n    // @ts-ignore\n    @ViewChild(NgxGalleryImageComponent) image: NgxGalleryImageComponent;\n    // @ts-ignore\n    @ViewChild(NgxGalleryThumbnailsComponent) thubmnails: NgxGalleryThumbnailsComponent;\n\n    @HostBinding('style.width') width: string;\n    @HostBinding('style.height') height: string;\n    @HostBinding('style.left') left: string;\n\n    constructor(private myElement: ElementRef) {}\n\n    ngOnInit() {\n      const tempOptions = [{\n        width: this.widthOption,\n        height: this.heightOption,\n        thumbnails: this.thumbnailsOption,\n        thumbnailsColumns: this.thumbnailsColumnsOption,\n        startIndex: this.startIndexOption,\n        imageDescription: this.imageDescriptionOption,\n        imageArrows: this.imageArrowsOption,\n        thumbnailsArrows: this.thumbnailsArrowsOption,\n        previewArrows: this.previewArrowsOption,\n        imageSwipe: this.imageSwipeOption,\n        thumbnailsSwipe: this.thumbnailsSwipeOption,\n        previewSwipe: this.previewSwipeOption,\n        imageAutoPlay: this.imageAutoPlayOption,\n        imageAutoPlayInterval: this.imageAutoPlayIntervalOption,\n        imageAutoPlayPauseOnHover: this.imageAutoPlayPauseOnHoverOption,\n        imageInfinityMove: this.imageInfinityMoveOption,\n        preview: this.previewOption,\n        arrowPrevIcon: this.arrowPrevIconOption,\n        arrowNextIcon: this.arrowNextIconOption,\n        previewPrevIconOption: this.previewPrevIconOption,\n        previewNextIconOption: this.previewNextIconOption\n      }];\n\n        // this.options = this.options.map((opt) => new NgxGalleryOptions(opt));\n        this.options = tempOptions.map((opt) => new NgxGalleryOptions(opt));\n\n        this.sortOptions();\n        this.setBreakpoint();\n        this.setOptions();\n        this.checkFullWidth();\n        if (this.currentOptions) {\n            this.selectedIndex = <number>this.currentOptions.startIndex;\n        }\n    }\n\n    ngDoCheck(): void {\n        if (this.images !== undefined && (this.images.length !== this.oldImagesLength)\n            || (this.images !== this.oldImages)) {\n            this.oldImagesLength = this.images.length;\n            this.oldImages = this.images;\n            this.setOptions();\n            this.setImages();\n\n            if (this.images && this.images.length) {\n                this.imagesReady.emit();\n            }\n\n            if (this.image) {\n                this.image.reset(<number>this.currentOptions.startIndex);\n            }\n\n            if (this.currentOptions.thumbnailsAutoHide && this.currentOptions.thumbnails\n                && this.images.length <= 1) {\n                this.currentOptions.thumbnails = false;\n                this.currentOptions.imageArrows = false;\n            }\n\n            this.resetThumbnails();\n        }\n    }\n\n    ngAfterViewInit(): void {\n        this.checkFullWidth();\n    }\n\n    @HostListener('window:resize') onResize() {\n        this.setBreakpoint();\n\n        if (this.prevBreakpoint !== this.breakpoint) {\n            this.setOptions();\n            this.resetThumbnails();\n        }\n\n        if (this.currentOptions && this.currentOptions.fullWidth) {\n\n            if (this.fullWidthTimeout) {\n                clearTimeout(this.fullWidthTimeout);\n            }\n\n            this.fullWidthTimeout = setTimeout(() => {\n                this.checkFullWidth();\n            }, 200);\n        }\n    }\n\n    getImageHeight(): string {\n        return (this.currentOptions && this.currentOptions.thumbnails) ?\n            this.currentOptions.imagePercent + '%' : '100%';\n    }\n\n    getThumbnailsHeight(): string {\n        if (this.currentOptions && this.currentOptions.image) {\n            return 'calc(' + this.currentOptions.thumbnailsPercent + '% - '\n            + this.currentOptions.thumbnailsMargin + 'px)';\n        } else {\n            return '100%';\n        }\n    }\n\n    getThumbnailsMarginTop(): string {\n        if (this.currentOptions && this.currentOptions.layout === NgxGalleryLayout.ThumbnailsBottom) {\n            return this.currentOptions.thumbnailsMargin + 'px';\n        } else {\n            return '0px';\n        }\n    }\n\n    getThumbnailsMarginBottom(): string {\n        if (this.currentOptions && this.currentOptions.layout === NgxGalleryLayout.ThumbnailsTop) {\n            return this.currentOptions.thumbnailsMargin + 'px';\n        } else {\n            return '0px';\n        }\n    }\n\n    openPreview(index: number): void {\n        if (this.currentOptions.previewCustom) {\n            this.currentOptions.previewCustom(index);\n        } else {\n            this.previewEnabled = true;\n            this.preview.open(index);\n        }\n    }\n\n    onPreviewOpen(): void {\n        this.previewOpen.emit();\n\n        if (this.image && this.image.autoPlay) {\n            this.image.stopAutoPlay();\n        }\n    }\n\n    onPreviewClose(): void {\n        this.previewEnabled = false;\n        this.previewClose.emit();\n\n        if (this.image && this.image.autoPlay) {\n            this.image.startAutoPlay();\n        }\n    }\n\n    selectFromImage(index: number) {\n        this.select(index);\n    }\n\n    selectFromThumbnails(index: number) {\n        this.select(index);\n\n        if (this.currentOptions && this.currentOptions.thumbnails && this.currentOptions.preview\n            && (!this.currentOptions.image || this.currentOptions.thumbnailsRemainingCount)) {\n            this.openPreview(this.selectedIndex);\n        }\n    }\n\n    show(index: number): void {\n        this.select(index);\n    }\n\n    showNext(): void {\n        this.image.showNext();\n    }\n\n    showPrev(): void {\n        this.image.showPrev();\n    }\n\n    canShowNext(): boolean {\n        if (this.images && this.currentOptions) {\n            return (this.currentOptions.imageInfinityMove || this.selectedIndex < this.images.length - 1)\n                ? true : false;\n        } else {\n            return false;\n        }\n    }\n\n    canShowPrev(): boolean {\n        if (this.images && this.currentOptions) {\n            return (this.currentOptions.imageInfinityMove || this.selectedIndex > 0) ? true : false;\n        } else {\n            return false;\n        }\n    }\n\n    previewSelect(index: number) {\n        this.previewChange.emit({index, image: this.images[index]});\n    }\n\n    moveThumbnailsRight() {\n        this.thubmnails.moveRight();\n    }\n\n    moveThumbnailsLeft() {\n        this.thubmnails.moveLeft();\n    }\n\n    canMoveThumbnailsRight() {\n        return this.thubmnails.canMoveRight();\n    }\n\n    canMoveThumbnailsLeft() {\n        return this.thubmnails.canMoveLeft();\n    }\n\n    private resetThumbnails() {\n        if (this.thubmnails) {\n            this.thubmnails.reset(<number>this.currentOptions.startIndex);\n        }\n    }\n\n    private select(index: number) {\n        this.selectedIndex = index;\n\n        this.change.emit({\n            index,\n            image: this.images[index]\n        });\n    }\n\n    private checkFullWidth(): void {\n        if (this.currentOptions && this.currentOptions.fullWidth) {\n            this.width = document.body.clientWidth + 'px';\n            this.left = (-(document.body.clientWidth -\n                this.myElement.nativeElement.parentNode.innerWidth) / 2) + 'px';\n        }\n    }\n\n    private setImages(): void {\n        this.smallImages = this.images.map((img) => <string>img.small);\n        this.mediumImages = this.images.map((img, i) => new NgxGalleryOrderedImage({\n            src: img.medium,\n            index: i\n        }));\n        this.bigImages = this.images.map((img) => <string>img.big);\n        this.descriptions = this.images.map((img) => <string>img.description);\n        this.links = this.images.map((img) => <string>img.url);\n        this.labels = this.images.map((img) => <string>img.label);\n    }\n\n    private setBreakpoint(): void {\n        this.prevBreakpoint = this.breakpoint;\n        let breakpoints;\n\n        if (typeof window !== 'undefined') {\n            breakpoints = this.options.filter((opt) => opt.breakpoint >= window.innerWidth)\n                .map((opt) => opt.breakpoint);\n        }\n\n        if (breakpoints && breakpoints.length) {\n            this.breakpoint = breakpoints.pop();\n        } else {\n            this.breakpoint = undefined;\n        }\n    }\n\n    private sortOptions(): void {\n        this.options = [\n            ...this.options.filter((a) => a.breakpoint === undefined),\n            ...this.options\n                .filter((a) => a.breakpoint !== undefined)\n                .sort((a, b) => b.breakpoint - a.breakpoint)\n        ];\n    }\n\n    private setOptions(): void {\n        this.currentOptions = new NgxGalleryOptions({});\n\n        this.options\n            .filter((opt) => opt.breakpoint === undefined || opt.breakpoint >= this.breakpoint)\n            .map((opt) => this.combineOptions(this.currentOptions, opt));\n\n        this.width = <string>this.currentOptions.width;\n        this.height = <string>this.currentOptions.height;\n    }\n\n    private combineOptions(first: NgxGalleryOptions, second: NgxGalleryOptions) {\n        Object.keys(second).map((val) => first[val] = second[val] !== undefined ? second[val] : first[val]);\n    }\n}\n\n","import { SafeResourceUrl } from '@angular/platform-browser';\n\nexport interface INgxGalleryImage {\n    small?: string | SafeResourceUrl;\n    medium?: string | SafeResourceUrl;\n    big?: string | SafeResourceUrl;\n    description?: string;\n    url?: string;\n    label?: string;\n}\n\nexport class NgxGalleryImage implements INgxGalleryImage {\n    small?: string | SafeResourceUrl;\n    medium?: string | SafeResourceUrl;\n    big?: string | SafeResourceUrl;\n    description?: string;\n    url?: string;\n    label?: string;\n\n    constructor(obj: INgxGalleryImage) {\n        this.small = obj.small;\n        this.medium = obj.medium;\n        this.big = obj.big;\n        this.description = obj.description;\n        this.url = obj.url;\n        this.label = obj.label;\n    }\n}\n","import { NgModule, ModuleWithProviders, Injectable } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HammerGestureConfig, HAMMER_GESTURE_CONFIG } from '@angular/platform-browser';\nimport { MatIconModule } from '@angular/material/icon';\nimport { OverlayModule } from '@angular/cdk/overlay';\n\nimport { NgxGalleryActionComponent } from './lib/ngx-gallery-action.component';\nimport { NgxGalleryArrowsComponent } from './lib/ngx-gallery-arrows.component';\nimport { NgxGalleryBulletsComponent } from './lib/ngx-gallery-bullets.component';\nimport { NgxGalleryImageComponent } from './lib/ngx-gallery-image.component';\nimport { NgxGalleryThumbnailsComponent } from './lib/ngx-gallery-thumbnails.component';\nimport { NgxGalleryPreviewComponent } from './lib/ngx-gallery-preview.component';\nimport { NgxGalleryComponent } from './lib/ngx-gallery.component';\n\nexport * from './lib/ngx-gallery.component';\nexport * from './lib/ngx-gallery-action.component';\nexport * from './lib/ngx-gallery-image.component';\nexport * from './lib/ngx-gallery-thumbnails.component';\nexport * from './lib/ngx-gallery-preview.component';\nexport * from './lib/ngx-gallery-arrows.component';\nexport * from './lib/ngx-gallery-bullets.component';\nexport * from './lib/ngx-gallery-options.model';\nexport * from './lib/ngx-gallery-image.model';\nexport * from './lib/ngx-gallery-animation.model';\nexport * from './lib/ngx-gallery-helper.service';\nexport * from './lib/ngx-gallery-image-size.model';\nexport * from './lib/ngx-gallery-layout.model';\nexport * from './lib/ngx-gallery-order.model';\nexport * from './lib/ngx-gallery-ordered-image.model';\nexport * from './lib/ngx-gallery-action.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomHammerConfig extends HammerGestureConfig  {\n    overrides = <any>{\n        'pinch': { enable: false },\n        'rotate': { enable: false }\n    };\n}\n\n@NgModule({\n    imports: [\n        CommonModule,\n\t\tOverlayModule,\n        MatIconModule\n    ],\n    declarations: [\n        NgxGalleryActionComponent,\n        NgxGalleryArrowsComponent,\n        NgxGalleryBulletsComponent,\n        NgxGalleryImageComponent,\n        NgxGalleryThumbnailsComponent,\n        NgxGalleryPreviewComponent,\n        NgxGalleryComponent\n    ],\n    exports: [\n        NgxGalleryComponent\n    ],\n    providers: [\n        { provide: HAMMER_GESTURE_CONFIG, useClass: CustomHammerConfig }\n    ]\n})\nexport class NgxGalleryModule {}\n"],"names":["tslib_1.__extends"],"mappings":"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"}